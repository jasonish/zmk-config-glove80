/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
  behaviors {
    // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
    // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
    layer_td: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      label = "LAYER_TAP_DANCE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mo LOWER>, <&to LOWER>;
    };
  };
  
  macros {
    rgb_ug_status_macro: rgb_ug_status_macro_0 {
      label = "RGB_UG_STATUS";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&rgb_ug RGB_STATUS>;
    };
  };
  
  macros {
    bt_0: bt_profile_macro_0 {
      label = "BT_0";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;
    };
  };
  
  macros {
    bt_1: bt_profile_macro_1 {
      label = "BT_1";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;
    };
  };
  
  macros {
    bt_2: bt_profile_macro_2 {
      label = "BT_2";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;
    };
  };
  
  macros {
    bt_3: bt_profile_macro_3 {
      label = "BT_3";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&out OUT_BLE>, <&bt BT_SEL 3>;
    };
  };
  
  magic: magic_hold_tap {
    compatible = "zmk,behavior-hold-tap";
    label = "MAGIC_HOLD_TAP";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    bindings = <&mo>, <&rgb_ug_status_macro>;
  };

  #define PAUSE &kp PAUSE_BREAK
  #define ALT_DEL &mt LALT DEL
  #define ALT_RET &mt LALT RET 
  
  keymap {
    compatible = "zmk,keymap";
    
    default_layer {
      bindings = <
        &kp F1         &kp F2   &kp F3      &kp F4      &kp F5                                                /**/                                          &kp F6   &kp F7      &kp F8      &kp F9      &kp F10
        &kp EQUAL      &kp N1   &kp N2      &kp N3      &kp N4      &kp N5                                    /**/                                  &kp N6  &kp N7   &kp N8      &kp N9      &kp N0      &kp MINUS
        &kp TAB        &kp Q    &kp W       &kp E       &kp R       &kp T                                     /**/                                  &kp Y   &kp U    &kp I       &kp O       &kp P       &kp BSLH
        &kp ESC        &kp A    &kp S       &kp D       &kp F       &kp G                                     /**/                                  &kp H   &kp J    &kp K       &kp L       &kp SEMI    &kp SQT
        &kp GRAVE      &kp Z    &kp X       &kp C       &kp V       &kp B   &kp LSHFT   &kp LCTRL   &kp LGUI  /**/  &kp LGUI  &kp RCTRL &kp RSHFT   &kp N   &kp M    &kp COMMA   &kp DOT     &kp FSLH    &kp PG_UP
        &magic MAGIC 0 &kp HOME &kp END     &kp LEFT    &kp RIGHT           &kp BSPC    ALT_DEL     &kp LGUI  /**/  &kp LGUI  ALT_RET   &kp SPACE           &kp DOWN &kp UP      &kp LBKT    &kp RBKT    &kp PG_DN
        >;
    };
    
    lower_layer {
      bindings = <
        &trans    &trans      &trans   &trans   &trans                                                                                               &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &trans          PAUSE          
        &trans    &none       &none    &none    &none    &trans                                                                         &trans       &trans       &trans       &trans        &trans          &kp PSCRN
        &trans    &none       &none    &kp UP   &none    &trans                                                                         &trans       &trans       &trans       &trans        &trans          &kp SLCK
        &trans    &none       &trans   &trans   &trans   &trans                                                                         &trans       &trans       &trans       &trans        &trans          &none
        &trans    &trans      &none    &kp F11  &kp F12  &trans   &trans      &trans      &to DEFAULT &trans      &trans      &trans    &trans       &trans       &trans       &trans        &trans          &trans
        &trans    &kp CAPS    &kp INS  &kp F11  &kp F12           &trans      &trans      &trans      &trans      &trans      &trans                 &trans       &trans       &trans        &trans          &trans
        >;
    };
    
    magic_layer {
      bindings = <
        &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
        &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
        &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
        &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
        &reset            &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &reset
        &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &to FACTORY_TEST
        >;
    };
  };
};
